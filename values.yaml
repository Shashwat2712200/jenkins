variables:

- name: 'BROWSERSLIST_IGNORE_OLD_DATA'
  value: true

- name: imageName
  value: "dotnet/image" #Set Repository name/image name

- name: domainName 
  value: "cfdevsecops.azurecr.io" # enter /registry domain name.
#SONARQUBE

- name: sonartask
  value: True #set false to disable this task 

- name: sonar_connection
  value: sonar_service_endpoint #Set Service Connection name

- name: SonarServerName
  value: https://sonarqube.demo.devsecops.cf.unisys-waf.com #add SonarQube server URL.

- name: SonarToken
  value: 6ba2173b139e08a08b86f455ffa002c6eaa1b0a3 #Set Personal Access Token generated in SonarQube

#SNYK_dependency
- name: snykdependencytask
  value: True #set false to disable this task 

- name: snyk_service_connection
  value: "snyk_service_endpoint" #Snyk service connection name

- name: snyk_severity
  value: critical  # severity value to check docker file(low,medium,high,critical)
#docker

- name: docker_build_conn
  value: "acr_userpass_service" #artifactory service connection

- name: docker_repo
  value: "dotnet/image" #Artifactory repository name where images are stored
#SNYK_docker
- name: snykdockertask
  value: True #set false to disable this task 

- name: snyk_docker_severity
  value: critical # severity value to check docker file(Low,Medium,High,Critical)
#IN-TOTO
- name: intototask
  value: False #set false to disable this task

- name: build_intoto
  value: false #set false to disable this task
- name: build_key
  value: NF #set false to disable this task

- name: test_intoto
  value: false #set false to disable this task
- name: test_key
  value: NF #set false to disable this task

- name: docker_intoto
  value: false #set false to disable this task
- name: docker_key
  value: NF #set false to disable this task

- name: trivy_intoto
  value: false #set false to disable this task
- name: trivy_key
  value: NF #set false to disable this task

- name: checkov_intoto
  value: false #set false to disable this task
- name: checkov_key
  value: NF #set false to disable this task

- name: owner_key
  value: NF #set false to disable this task




#grype_docker
- name: grypetask
  value: False #set false to disable this task 

- name: grype_severity
  value: critical # severity value to check docker file(Low,Medium,High,Critical)

#aqua_trivy
- name: aquatrivytask
  value: True #set false to disable this task 

- name: aqua_severity
  value: CRITICAL #Set Vulnerabbility severity(CRITICAL,HIGH,MEDIUM,LOW)


- name: aqua_trivy_image
  value: $(domainName)/$(imageName):$(Build.BuildId) #dont change this as it will take variables mentioned above in this file.

#checkov
- name: checkovtask
  value: True #set false to disable this task 

- name: checkov_policies
  value: CKV_K8S_34,CKV_K8S_44,CKV_K8S_45 #  Add Policies from https://www.checkov.io/5.Policy%20Index/all.html

#HELM_update

- name: helm_name_dev
  value: deployment.yaml #enter deployment file path followed by deployment file name

- name: helm_name_qa
  value: deployment.yaml #enter deployment file path followed by deployment file name 
- name: bluegreen
  value: false
  
- name: helm_name_prod
  value: deployment.yaml #enter deployment file path followed by deployment file name


#bug_detail

- name: bug_person_name
  value: Divyam Matia # name of the person whom you want to assign bug if pipeline fails.

- name: bug_person_email
  value: <divyam.matia@unisys.com>
#Email 
- name: emailtask
  value: True #set false to disable this task 
  
- name: Toaddress
  value: "divyam.matia@unisys.com" #The build and pipeline details are sent to Recipients email addresses separated by semicolon
#END-----------END------------END---------END
